using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.InputSystem;

public class InputManager : MonoBehaviour, GameInput.IPlayerActions
{
    // Reference to the GameInput class, which is generated by the Input System
    private GameInput gameInput;

    void Awake()
    {
        // Initialize the GameInput instance
        gameInput = new GameInput();

        // Enable the Player action map to start listening for player input
        gameInput.Player.Enable();

        // Set this script (InputManager) as the callback handler for player actions
        // This ensures methods like OnMove are called when the respective inputs are performed
        gameInput.Player.SetCallbacks(this);
    }

    // This method is called whenever the "Move" action is triggered
    // It automatically gets a context object that contains information about the input event


    public void OnInteract(InputAction.CallbackContext context)
    {
        Actions.InteractEvent?.Invoke();
    }

    public void OnPause(InputAction.CallbackContext context)
    {
        if (context.started)
        {
            Actions.PauseEvent?.Invoke();
        }
        
        
    }

    public void OnMove(InputAction.CallbackContext context)
    {
        throw new NotImplementedException();
    }

    public void OnWKey(InputAction.CallbackContext context)
    {
        if (context.started)
        {
        Actions.W_KeyEvent?.Invoke();
        }
    }

    public void OnAKey(InputAction.CallbackContext context)
    {
        if (context.started)
        {
            Actions.A_KeyEvent?.Invoke();
        }
    }

    public void OnSKey(InputAction.CallbackContext context)
    {
        if (context.started)
        {
            Actions.S_KeyEvent?.Invoke();
        }
    }

    public void OnDKey(InputAction.CallbackContext context)
    {
        if (context.started)
        {
            Actions.D_KeyEvent?.Invoke();
        }
    }
}

public static class Actions
{    
    public static Action InteractEvent;
    public static Action PauseEvent;

    public static Action W_KeyEvent;
    public static Action A_KeyEvent;
    public static Action S_KeyEvent;
    public static Action D_KeyEvent;
}






